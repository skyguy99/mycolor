{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Design } from \"../constants\";\nexport var isPortrait = function isPortrait() {\n  return Design.window.height >= Design.window.width;\n};\nexport var applyButtonWidth = function applyButtonWidth() {\n  var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Design.buttonWidth;\n  return {\n    width: width,\n    height: width,\n    borderRadius: width * 0.5\n  };\n};\nexport var applyButtonInnerWidthFirst = function applyButtonInnerWidthFirst() {\n  var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Design.buttonWidth;\n  return {\n    width: width / 2,\n    height: width,\n    borderTopLeftRadius: width * 0.5,\n    borderBottomLeftRadius: width * 0.5\n  };\n};\nexport var applyButtonInnerWidthSecond = function applyButtonInnerWidthSecond() {\n  var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Design.buttonWidth;\n  return {\n    width: width / 2,\n    height: width,\n    borderTopRightRadius: width * 0.5,\n    borderBottomRightRadius: width * 0.5\n  };\n};\nexport var isIphoneX = function isIphoneX() {\n  return Platform.OS === \"ios\" && !Platform.isPad && !Platform.isTVOS && (Design.window.height === 812 || Design.window.width === 812 || Design.window.height === 896 || Design.window.width === 896);\n};\nexport var ifIphoneX = function ifIphoneX(iphoneXStyle, regularStyle) {\n  if (isIphoneX()) return iphoneXStyle;\n  return regularStyle;\n};\nexport var getStatusBarHeight = function getStatusBarHeight(safe) {\n  return Platform.select({\n    ios: ifIphoneX(safe ? 44 : 30, 20),\n    android: StatusBar.currentHeight,\n    default: 0\n  });\n};","map":{"version":3,"sources":["/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/FloatingMenu/helpers/index.js"],"names":["Design","isPortrait","window","height","width","applyButtonWidth","buttonWidth","borderRadius","applyButtonInnerWidthFirst","borderTopLeftRadius","borderBottomLeftRadius","applyButtonInnerWidthSecond","borderTopRightRadius","borderBottomRightRadius","isIphoneX","Platform","OS","isPad","isTVOS","ifIphoneX","iphoneXStyle","regularStyle","getStatusBarHeight","safe","select","ios","android","StatusBar","currentHeight","default"],"mappings":";;AAEA,SAASA,MAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,SAAOD,MAAM,CAACE,MAAP,CAAcC,MAAd,IAAwBH,MAAM,CAACE,MAAP,CAAcE,KAA7C;AACD,CAFM;AAIP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAACD,KAAD,uEAASJ,MAAM,CAACM,WAAhB;AAAA,SAAiC;AAC/DF,IAAAA,KAAK,EAALA,KAD+D;AAE/DD,IAAAA,MAAM,EAAEC,KAFuD;AAG/DG,IAAAA,YAAY,EAAEH,KAAK,GAAG;AAHyC,GAAjC;AAAA,CAAzB;AAMP,OAAO,IAAMI,0BAA0B,GAAG,SAA7BA,0BAA6B;AAAA,MAACJ,KAAD,uEAASJ,MAAM,CAACM,WAAhB;AAAA,SAAiC;AACzEF,IAAAA,KAAK,EAAEA,KAAK,GAAG,CAD0D;AAEzED,IAAAA,MAAM,EAAEC,KAFiE;AAGzEK,IAAAA,mBAAmB,EAAEL,KAAK,GAAG,GAH4C;AAIzEM,IAAAA,sBAAsB,EAAEN,KAAK,GAAG;AAJyC,GAAjC;AAAA,CAAnC;AAOP,OAAO,IAAMO,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,MAACP,KAAD,uEAASJ,MAAM,CAACM,WAAhB;AAAA,SAAiC;AAC1EF,IAAAA,KAAK,EAAEA,KAAK,GAAG,CAD2D;AAE1ED,IAAAA,MAAM,EAAEC,KAFkE;AAG1EQ,IAAAA,oBAAoB,EAAER,KAAK,GAAG,GAH4C;AAI1ES,IAAAA,uBAAuB,EAAET,KAAK,GAAG;AAJyC,GAAjC;AAAA,CAApC;AAOP,OAAO,IAAMU,SAAS,GAAG,SAAZA,SAAY;AAAA,SACvBC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IACA,CAACD,QAAQ,CAACE,KADV,IAEA,CAACF,QAAQ,CAACG,MAFV,KAGClB,MAAM,CAACE,MAAP,CAAcC,MAAd,KAAyB,GAAzB,IACCH,MAAM,CAACE,MAAP,CAAcE,KAAd,KAAwB,GADzB,IAECJ,MAAM,CAACE,MAAP,CAAcC,MAAd,KAAyB,GAF1B,IAGCH,MAAM,CAACE,MAAP,CAAcE,KAAd,KAAwB,GAN1B,CADuB;AAAA,CAAlB;AASP,OAAO,IAAMe,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAeC,YAAf,EAAgC;AACvD,MAAIP,SAAS,EAAb,EAAiB,OAAOM,YAAP;AAEjB,SAAOC,YAAP;AACD,CAJM;AAMP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD;AAAA,SAChCR,QAAQ,CAACS,MAAT,CAAgB;AACdC,IAAAA,GAAG,EAAEN,SAAS,CAACI,IAAI,GAAG,EAAH,GAAQ,EAAb,EAAiB,EAAjB,CADA;AAEdG,IAAAA,OAAO,EAAEC,SAAS,CAACC,aAFL;AAGdC,IAAAA,OAAO,EAAE;AAHK,GAAhB,CADgC;AAAA,CAA3B","sourcesContent":["import { Platform, StatusBar } from \"react-native\";\r\n\r\nimport { Design } from \"../constants\";\r\n\r\nexport const isPortrait = () => {\r\n  return Design.window.height >= Design.window.width;\r\n};\r\n\r\nexport const applyButtonWidth = (width = Design.buttonWidth) => ({\r\n  width,\r\n  height: width,\r\n  borderRadius: width * 0.5,\r\n});\r\n\r\nexport const applyButtonInnerWidthFirst = (width = Design.buttonWidth) => ({\r\n  width: width / 2,\r\n  height: width,\r\n  borderTopLeftRadius: width * 0.5,\r\n  borderBottomLeftRadius: width * 0.5,\r\n});\r\n\r\nexport const applyButtonInnerWidthSecond = (width = Design.buttonWidth) => ({\r\n  width: width / 2,\r\n  height: width,\r\n  borderTopRightRadius: width * 0.5,\r\n  borderBottomRightRadius: width * 0.5,\r\n});\r\n\r\nexport const isIphoneX = () =>\r\n  Platform.OS === \"ios\" &&\r\n  !Platform.isPad &&\r\n  !Platform.isTVOS &&\r\n  (Design.window.height === 812 ||\r\n    Design.window.width === 812 ||\r\n    Design.window.height === 896 ||\r\n    Design.window.width === 896);\r\n\r\nexport const ifIphoneX = (iphoneXStyle, regularStyle) => {\r\n  if (isIphoneX()) return iphoneXStyle;\r\n\r\n  return regularStyle;\r\n};\r\n\r\nexport const getStatusBarHeight = (safe) =>\r\n  Platform.select({\r\n    ios: ifIphoneX(safe ? 44 : 30, 20),\r\n    android: StatusBar.currentHeight,\r\n    default: 0,\r\n  });\r\n"]},"metadata":{},"sourceType":"module"}