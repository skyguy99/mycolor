{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/FloatingMenu/components/FloatingItem/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { applyButtonWidth, applyButtonInnerWidthFirst, applyButtonInnerWidthSecond } from \"../../helpers\";\nimport globalStyles from \"../../styles\";\nimport styles from \"./styles\";\n\nvar FloatingItem = function (_React$PureComponent) {\n  _inherits(FloatingItem, _React$PureComponent);\n\n  var _super = _createSuper(FloatingItem);\n\n  function FloatingItem() {\n    _classCallCheck(this, FloatingItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FloatingItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          icon = _this$props.icon,\n          index = _this$props.index,\n          isOpen = _this$props.isOpen,\n          position = _this$props.position,\n          numItems = _this$props.numItems,\n          itemsDown = _this$props.itemsDown,\n          innerWidth = _this$props.innerWidth,\n          buttonWidth = _this$props.buttonWidth,\n          primaryColor = _this$props.primaryColor,\n          itemFanAnimations = _this$props.itemFanAnimations,\n          itemPressAnimations = _this$props.itemPressAnimations,\n          _backgroundColor = _this$props.backgroundColor,\n          _borderColor = _this$props.borderColor,\n          _iconColor = _this$props.iconColor,\n          onPressIn = _this$props.onPressIn,\n          onPressOut = _this$props.onPressOut,\n          onPress = _this$props.onPress,\n          isInLongPress = _this$props.isInLongPress,\n          selectedColor = _this$props.selectedColor;\n      var label = item.label,\n          labelStyle = item.labelStyle,\n          isPending = item.isPending,\n          isDisabled = item.isDisabled;\n      var pressAnimation = itemPressAnimations[index];\n      var fanAnimation = itemFanAnimations[index];\n      var itemDown = itemsDown[index];\n\n      var _position$split = position.split(\"-\"),\n          _position$split2 = _slicedToArray(_position$split, 2),\n          vPos = _position$split2[0],\n          hPos = _position$split2[1];\n\n      var multiple = vPos.toLowerCase() === \"bottom\" ? 1 : -1;\n      var backgroundColor = _backgroundColor;\n      var translateY = fanAnimation && fanAnimation.interpolate({\n        inputRange: [0.0, 1.0],\n        outputRange: [(buttonWidth + 14) * (numItems - index) * 0.5 * multiple, 0]\n      });\n      var rotate = fanAnimation && fanAnimation.interpolate({\n        inputRange: [0.0, 1.0],\n        outputRange: [15 * (numItems - index) * multiple + \"deg\", \"0deg\"]\n      });\n      var oppositeRotate = fanAnimation && fanAnimation.interpolate({\n        inputRange: [0.0, 1.0],\n        outputRange: [-15 * (numItems - index) * multiple + \"deg\", \"0deg\"]\n      });\n      var scale = fanAnimation && fanAnimation.interpolate({\n        inputRange: [0.0, 1.0],\n        outputRange: [0.8, 1.0]\n      });\n      var opacity = fanAnimation && fanAnimation.interpolate({\n        inputRange: [0.0, 0.25, 1.0],\n        outputRange: [0.0, 0.0, 1.0],\n        extrapolate: \"clamp\"\n      });\n      var fastOpacity = fanAnimation && fanAnimation.interpolate({\n        inputRange: [0.0, 0.8, 1.0],\n        outputRange: [0.0, 0.0, 1.0],\n        extrapolate: \"clamp\"\n      });\n      var content = null;\n      var borderColor = isDisabled ? (_borderColor || primaryColor) + \"80\" : _borderColor || primaryColor;\n      return React.createElement(Animated.View, {\n        key: \"item-\" + index,\n        style: [globalStyles.buttonOuter, applyButtonWidth(buttonWidth), {\n          opacity: opacity,\n          transform: fanAnimation ? [{\n            translateX: 0\n          }, {\n            translateY: translateY\n          }, {\n            rotate: rotate\n          }, {\n            scale: scale\n          }] : [],\n          borderColor: borderColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [isDisabled && globalStyles.disabled],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [globalStyles.button, {\n          overflow: 'hidden'\n        }],\n        disabled: isDisabled || isPending || !isOpen,\n        hitSlop: {\n          top: 10,\n          left: 10,\n          right: 10,\n          bottom: 10\n        },\n        onPressIn: onPressIn,\n        onPressOut: onPressOut,\n        onPress: onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: [globalStyles.buttonInner, applyButtonInnerWidthFirst(innerWidth), {\n          backgroundColor: isInLongPress && selectedColor !== \"#ffffff\" ? selectedColor : backgroundColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          display: isInLongPress ? \"flex\" : \"none\",\n          backgroundColor: \"red\",\n          width: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }), content), React.createElement(Animated.View, {\n        style: [globalStyles.buttonInner, applyButtonInnerWidthSecond(innerWidth), {\n          backgroundColor: backgroundColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          display: isInLongPress ? \"flex\" : \"none\",\n          backgroundColor: \"red\",\n          width: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      }), content))));\n    }\n  }]);\n\n  return FloatingItem;\n}(React.PureComponent);\n\nexport default FloatingItem;","map":{"version":3,"sources":["/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/FloatingMenu/components/FloatingItem/index.js"],"names":["React","applyButtonWidth","applyButtonInnerWidthFirst","applyButtonInnerWidthSecond","globalStyles","styles","FloatingItem","props","item","icon","index","isOpen","position","numItems","itemsDown","innerWidth","buttonWidth","primaryColor","itemFanAnimations","itemPressAnimations","_backgroundColor","backgroundColor","_borderColor","borderColor","_iconColor","iconColor","onPressIn","onPressOut","onPress","isInLongPress","selectedColor","label","labelStyle","isPending","isDisabled","pressAnimation","fanAnimation","itemDown","split","vPos","hPos","multiple","toLowerCase","translateY","interpolate","inputRange","outputRange","rotate","oppositeRotate","scale","opacity","extrapolate","fastOpacity","content","buttonOuter","transform","translateX","disabled","button","overflow","top","left","right","bottom","buttonInner","display","width","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  Animated,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\n\r\nimport {\r\n  applyButtonWidth,\r\n  applyButtonInnerWidthFirst,\r\n  applyButtonInnerWidthSecond,\r\n} from \"../../helpers\";\r\nimport globalStyles from \"../../styles\";\r\nimport styles from \"./styles\";\r\n\r\nclass FloatingItem extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      item,\r\n      icon,\r\n      index,\r\n      isOpen,\r\n      position,\r\n      numItems,\r\n      itemsDown,\r\n      innerWidth,\r\n      buttonWidth,\r\n      primaryColor,\r\n      itemFanAnimations,\r\n      itemPressAnimations,\r\n      backgroundColor: _backgroundColor,\r\n      borderColor: _borderColor,\r\n      iconColor: _iconColor,\r\n      onPressIn,\r\n      onPressOut,\r\n      onPress,\r\n      isInLongPress,\r\n      selectedColor,\r\n    } = this.props;\r\n    const { label, labelStyle, isPending, isDisabled } = item;\r\n\r\n    const pressAnimation = itemPressAnimations[index];\r\n    const fanAnimation = itemFanAnimations[index];\r\n    const itemDown = itemsDown[index];\r\n    const [vPos, hPos] = position.split(\"-\");\r\n    const multiple = vPos.toLowerCase() === \"bottom\" ? 1 : -1;\r\n\r\n    //CHANGE ITEM COLOR HERE!!!!\r\n    //const backgroundColor = isInLongPress ? 'red' : _backgroundColor; //put half and half here\r\n    const backgroundColor = _backgroundColor;\r\n\r\n    const translateY =\r\n      fanAnimation &&\r\n      fanAnimation.interpolate({\r\n        inputRange: [0.0, 1.0],\r\n        outputRange: [\r\n          (buttonWidth + 14) * (numItems - index) * 0.5 * multiple,\r\n          0,\r\n        ],\r\n      });\r\n    const rotate =\r\n      fanAnimation &&\r\n      fanAnimation.interpolate({\r\n        inputRange: [0.0, 1.0],\r\n        outputRange: [`${15 * (numItems - index) * multiple}deg`, \"0deg\"],\r\n      });\r\n    const oppositeRotate =\r\n      fanAnimation &&\r\n      fanAnimation.interpolate({\r\n        inputRange: [0.0, 1.0],\r\n        outputRange: [`${-15 * (numItems - index) * multiple}deg`, \"0deg\"],\r\n      });\r\n    const scale =\r\n      fanAnimation &&\r\n      fanAnimation.interpolate({\r\n        inputRange: [0.0, 1.0],\r\n        outputRange: [0.8, 1.0],\r\n      });\r\n    const opacity =\r\n      fanAnimation &&\r\n      fanAnimation.interpolate({\r\n        inputRange: [0.0, 0.25, 1.0],\r\n        outputRange: [0.0, 0.0, 1.0],\r\n        extrapolate: \"clamp\",\r\n      });\r\n    const fastOpacity =\r\n      fanAnimation &&\r\n      fanAnimation.interpolate({\r\n        inputRange: [0.0, 0.8, 1.0],\r\n        outputRange: [0.0, 0.0, 1.0],\r\n        extrapolate: \"clamp\",\r\n      });\r\n\r\n    let content = null;\r\n\r\n    const borderColor = isDisabled\r\n      ? `${_borderColor || primaryColor}80`\r\n      : _borderColor || primaryColor;\r\n\r\n    return (\r\n      <Animated.View\r\n        key={`item-${index}`}\r\n        style={[\r\n          globalStyles.buttonOuter,\r\n          applyButtonWidth(buttonWidth),\r\n          {\r\n            opacity,\r\n            transform: fanAnimation\r\n              ? [{ translateX: 0 }, { translateY }, { rotate }, { scale }]\r\n              : [],\r\n            borderColor,\r\n          },\r\n        ]}\r\n      >\r\n        <View style={[isDisabled && globalStyles.disabled]}>\r\n          <TouchableOpacity\r\n            style={[globalStyles.button, {overflow: 'hidden'}]}\r\n            disabled={isDisabled || isPending || !isOpen}\r\n            hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\r\n            onPressIn={onPressIn}\r\n            onPressOut={onPressOut}\r\n            onPress={onPress}\r\n          >\r\n            <Animated.View\r\n              style={[\r\n                globalStyles.buttonInner,\r\n                applyButtonInnerWidthFirst(innerWidth),\r\n                {\r\n                  //THIS CONTROLS SPLIT COLOR\r\n                  backgroundColor:\r\n                    isInLongPress && selectedColor !== \"#ffffff\"\r\n                      ? selectedColor\r\n                      : backgroundColor,\r\n                },\r\n              ]}\r\n            >\r\n              <View\r\n                style={{\r\n                  display: isInLongPress ? \"flex\" : \"none\",\r\n                  backgroundColor: \"red\",\r\n                  width: 20,\r\n                }}\r\n              />\r\n              {content}\r\n            </Animated.View>\r\n\r\n            <Animated.View\r\n              style={[\r\n\r\n                globalStyles.buttonInner,\r\n                applyButtonInnerWidthSecond(innerWidth),\r\n                { backgroundColor },\r\n              ]}\r\n            >\r\n              <View\r\n                style={{\r\n                  display: isInLongPress ? \"flex\" : \"none\",\r\n                  backgroundColor: \"red\",\r\n                  width: 20,\r\n                }}\r\n              />\r\n              {content}\r\n            </Animated.View>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Animated.View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FloatingItem;\r\n"]},"metadata":{},"sourceType":"module"}