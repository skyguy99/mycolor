{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/node_modules/react-native-textinput-effects/lib/Akira.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BaseInput from \"./BaseInput\";\n\nvar Akira = function (_BaseInput) {\n  _inherits(Akira, _BaseInput);\n\n  var _super = _createSuper(Akira);\n\n  function Akira() {\n    _classCallCheck(this, Akira);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Akira, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          containerStyle = _this$props.style,\n          inputHeight = _this$props.height,\n          labelHeight = _this$props.labelHeight,\n          inputPadding = _this$props.inputPadding,\n          inputStyle = _this$props.inputStyle,\n          labelStyle = _this$props.labelStyle,\n          borderColor = _this$props.borderColor;\n      var _this$state = this.state,\n          width = _this$state.width,\n          focusedAnim = _this$state.focusedAnim,\n          value = _this$state.value;\n      return React.createElement(View, {\n        style: containerStyle,\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          width: width,\n          height: labelHeight,\n          transform: [{\n            translateY: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [labelHeight + inputPadding, 0]\n            })\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.label, labelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, label))), React.createElement(TextInput, _extends({\n        ref: this.input\n      }, this.props, {\n        style: [styles.textInput, inputStyle, {\n          width: width,\n          height: inputHeight,\n          paddingHorizontal: inputPadding\n        }],\n        value: value,\n        onBlur: this._onBlur,\n        onChange: this._onChange,\n        onFocus: this._onFocus,\n        underlineColorAndroid: 'transparent',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      })), React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          left: 0,\n          bottom: 0,\n          height: inputHeight,\n          width: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [6, 1]\n          }),\n          backgroundColor: borderColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }), React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          top: labelHeight,\n          width: width,\n          height: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [6, 1]\n          }),\n          backgroundColor: borderColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }), React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: 0,\n          height: inputHeight,\n          width: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [6, 1]\n          }),\n          backgroundColor: borderColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }), React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          bottom: 0,\n          height: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [6, 1]\n          }),\n          width: width,\n          backgroundColor: borderColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Akira;\n}(BaseInput);\n\nAkira.propTypes = {\n  borderColor: PropTypes.string,\n  labelHeight: PropTypes.number,\n  inputPadding: PropTypes.number,\n  height: PropTypes.number\n};\nAkira.defaultProps = {\n  borderColor: '#7A7593',\n  labelHeight: 24,\n  inputPadding: 16,\n  height: 48,\n  animationDuration: 200\n};\nexport { Akira as default };\nvar styles = StyleSheet.create({\n  label: {\n    backgroundColor: 'transparent',\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#cc6055',\n    textAlign: 'center'\n  },\n  textInput: {\n    padding: 0,\n    color: 'black',\n    fontSize: 18,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/node_modules/react-native-textinput-effects/lib/Akira.js"],"names":["React","PropTypes","BaseInput","Akira","props","label","containerStyle","style","inputHeight","height","labelHeight","inputPadding","inputStyle","labelStyle","borderColor","state","width","focusedAnim","value","_onLayout","focus","transform","translateY","interpolate","inputRange","outputRange","styles","input","textInput","paddingHorizontal","_onBlur","_onChange","_onFocus","position","left","bottom","backgroundColor","top","right","propTypes","string","number","defaultProps","animationDuration","StyleSheet","create","fontSize","fontWeight","color","textAlign","padding"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;AAUA,OAAOC,SAAP;;IAEqBC,K;;;;;;;;;;;;;6BAmBV;AAAA,wBAUH,KAAKC,KAVF;AAAA,UAELC,KAFK,eAELA,KAFK;AAAA,UAGEC,cAHF,eAGLC,KAHK;AAAA,UAIGC,WAJH,eAILC,MAJK;AAAA,UAKLC,WALK,eAKLA,WALK;AAAA,UAMLC,YANK,eAMLA,YANK;AAAA,UAOLC,UAPK,eAOLA,UAPK;AAAA,UAQLC,UARK,eAQLA,UARK;AAAA,UASLC,WATK,eASLA,WATK;AAAA,wBAeH,KAAKC,KAfF;AAAA,UAYLC,KAZK,eAYLA,KAZK;AAAA,UAaLC,WAbK,eAaLA,WAbK;AAAA,UAcLC,KAdK,eAcLA,KAdK;AAiBP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,cAAb;AAA6B,QAAA,QAAQ,EAAE,KAAKa,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE;AACLJ,UAAAA,KAAK,EAALA,KADK;AAELP,UAAAA,MAAM,EAAEC,WAFH;AAGLW,UAAAA,SAAS,EAAE,CACT;AACEC,YAAAA,UAAU,EAAEL,WAAW,CAACM,WAAZ,CAAwB;AAClCC,cAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADsB;AAElCC,cAAAA,WAAW,EAAE,CAACf,WAAW,GAAGC,YAAf,EAA6B,CAA7B;AAFqB,aAAxB;AADd,WADS;AAHN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACe,MAAM,CAACrB,KAAR,EAAeQ,UAAf,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,KADH,CAdF,CADF,CADF,EAqBE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAE,KAAKsB;AADZ,SAEM,KAAKvB,KAFX;AAGE,QAAA,KAAK,EAAE,CACLsB,MAAM,CAACE,SADF,EAELhB,UAFK,EAGL;AACEI,UAAAA,KAAK,EAALA,KADF;AAEEP,UAAAA,MAAM,EAAED,WAFV;AAGEqB,UAAAA,iBAAiB,EAAElB;AAHrB,SAHK,CAHT;AAYE,QAAA,KAAK,EAAEO,KAZT;AAaE,QAAA,MAAM,EAAE,KAAKY,OAbf;AAcE,QAAA,QAAQ,EAAE,KAAKC,SAdjB;AAeE,QAAA,OAAO,EAAE,KAAKC,QAfhB;AAgBE,QAAA,qBAAqB,EAAE,aAhBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SArBF,EAwCE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,IAAI,EAAE,CAFD;AAGLC,UAAAA,MAAM,EAAE,CAHH;AAIL1B,UAAAA,MAAM,EAAED,WAJH;AAKLQ,UAAAA,KAAK,EAAEC,WAAW,CAACM,WAAZ,CAAwB;AAC7BC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADiB;AAE7BC,YAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFgB,WAAxB,CALF;AASLW,UAAAA,eAAe,EAAEtB;AATZ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxCF,EAsDE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE;AACLmB,UAAAA,QAAQ,EAAE,UADL;AAELI,UAAAA,GAAG,EAAE3B,WAFA;AAGLM,UAAAA,KAAK,EAALA,KAHK;AAILP,UAAAA,MAAM,EAAEQ,WAAW,CAACM,WAAZ,CAAwB;AAC9BC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkB;AAE9BC,YAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFiB,WAAxB,CAJH;AAQLW,UAAAA,eAAe,EAAEtB;AARZ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtDF,EAmEE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE;AACLmB,UAAAA,QAAQ,EAAE,UADL;AAELK,UAAAA,KAAK,EAAE,CAFF;AAGLH,UAAAA,MAAM,EAAE,CAHH;AAIL1B,UAAAA,MAAM,EAAED,WAJH;AAKLQ,UAAAA,KAAK,EAAEC,WAAW,CAACM,WAAZ,CAAwB;AAC7BC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADiB;AAE7BC,YAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFgB,WAAxB,CALF;AASLW,UAAAA,eAAe,EAAEtB;AATZ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnEF,EAiFE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE;AACLmB,UAAAA,QAAQ,EAAE,UADL;AAELE,UAAAA,MAAM,EAAE,CAFH;AAGL1B,UAAAA,MAAM,EAAEQ,WAAW,CAACM,WAAZ,CAAwB;AAC9BC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkB;AAE9BC,YAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFiB,WAAxB,CAHH;AAOLT,UAAAA,KAAK,EAALA,KAPK;AAQLoB,UAAAA,eAAe,EAAEtB;AARZ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjFF,CADF;AAgGD;;;;EApIgCZ,S;;AAAdC,K,CACZoC,S,GAAY;AAIjBzB,EAAAA,WAAW,EAAEb,SAAS,CAACuC,MAJN;AAKjB9B,EAAAA,WAAW,EAAET,SAAS,CAACwC,MALN;AAMjB9B,EAAAA,YAAY,EAAEV,SAAS,CAACwC,MANP;AAOjBhC,EAAAA,MAAM,EAAER,SAAS,CAACwC;AAPD,C;AADAtC,K,CAWZuC,Y,GAAe;AACpB5B,EAAAA,WAAW,EAAE,SADO;AAEpBJ,EAAAA,WAAW,EAAE,EAFO;AAGpBC,EAAAA,YAAY,EAAE,EAHM;AAIpBF,EAAAA,MAAM,EAAE,EAJY;AAKpBkC,EAAAA,iBAAiB,EAAE;AALC,C;SAXHxC,K;AAuIrB,IAAMuB,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC/BxC,EAAAA,KAAK,EAAE;AACL+B,IAAAA,eAAe,EAAE,aADZ;AAELU,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE,MAHP;AAILC,IAAAA,KAAK,EAAE,SAJF;AAKLC,IAAAA,SAAS,EAAE;AALN,GADwB;AAQ/BrB,EAAAA,SAAS,EAAE;AACTsB,IAAAA,OAAO,EAAE,CADA;AAETF,IAAAA,KAAK,EAAE,OAFE;AAGTF,IAAAA,QAAQ,EAAE,EAHD;AAITG,IAAAA,SAAS,EAAE;AAJF;AARoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Akira extends BaseInput {\n  static propTypes = {\n    /*\n     * this is applied as active border and label color\n     */\n    borderColor: PropTypes.string,\n    labelHeight: PropTypes.number,\n    inputPadding: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    borderColor: '#7A7593',\n    labelHeight: 24,\n    inputPadding: 16,\n    height: 48,\n    animationDuration: 200,\n  };\n\n  render() {\n    const {\n      label,\n      style: containerStyle,\n      height: inputHeight,\n      labelHeight,\n      inputPadding,\n      inputStyle,\n      labelStyle,\n      borderColor,\n    } = this.props;\n    const {\n      width,\n      focusedAnim,\n      value,\n    } = this.state;\n\n    return (\n      <View style={containerStyle} onLayout={this._onLayout}>\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              width,\n              height: labelHeight,\n              transform: [\n                {\n                  translateY: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [labelHeight + inputPadding, 0],\n                  }),\n                },\n              ],\n            }}\n          >\n            <Text style={[styles.label, labelStyle]}>\n              {label}\n            </Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[\n            styles.textInput,\n            inputStyle,\n            {\n              width,\n              height: inputHeight,\n              paddingHorizontal: inputPadding,\n            },\n          ]}\n          value={value}\n          onBlur={this._onBlur}\n          onChange={this._onChange}\n          onFocus={this._onFocus}\n          underlineColorAndroid={'transparent'}\n        />\n        {/* left border */}\n        <Animated.View\n          style={{\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            height: inputHeight,\n            width: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [6, 1],\n            }),\n            backgroundColor: borderColor,\n          }}\n        />\n        {/* top border */}\n        <Animated.View\n          style={{\n            position: 'absolute',\n            top: labelHeight,\n            width,\n            height: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [6, 1],\n            }),\n            backgroundColor: borderColor,\n          }}\n        />\n        {/* right border */}\n        <Animated.View\n          style={{\n            position: 'absolute',\n            right: 0,\n            bottom: 0,\n            height: inputHeight,\n            width: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [6, 1],\n            }),\n            backgroundColor: borderColor,\n          }}\n        />\n        {/* bottom border */}\n        <Animated.View\n          style={{\n            position: 'absolute',\n            bottom: 0,\n            height: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [6, 1],\n            }),\n            width,\n            backgroundColor: borderColor,\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    backgroundColor: 'transparent',\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#cc6055',\n    textAlign: 'center',\n  },\n  textInput: {\n    padding: 0,\n    color: 'black',\n    fontSize: 18,\n    textAlign: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}