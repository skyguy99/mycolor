{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/node_modules/react-native-textinput-effects/lib/Kaede.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BaseInput from \"./BaseInput\";\n\nvar Kaede = function (_BaseInput) {\n  _inherits(Kaede, _BaseInput);\n\n  var _super = _createSuper(Kaede);\n\n  function Kaede() {\n    _classCallCheck(this, Kaede);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Kaede, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          containerStyle = _this$props.style,\n          inputStyle = _this$props.inputStyle,\n          labelStyle = _this$props.labelStyle,\n          inputHeight = _this$props.height,\n          inputPadding = _this$props.inputPadding;\n      var _this$state = this.state,\n          width = _this$state.width,\n          focusedAnim = _this$state.focusedAnim,\n          value = _this$state.value;\n      var inputWidth = width * 0.6;\n      var flatLabelStyle = StyleSheet.flatten(labelStyle);\n      var labelBackgroundColor = '#EBEAEA';\n\n      if (flatLabelStyle && flatLabelStyle.backgroundColor) {\n        labelBackgroundColor = flatLabelStyle.backgroundColor;\n      }\n\n      return React.createElement(View, {\n        style: containerStyle,\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          width: inputWidth,\n          marginLeft: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [inputWidth * -1, 0]\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, _extends({\n        ref: this.input\n      }, this.props, {\n        style: [styles.textInput, inputStyle, {\n          height: inputHeight,\n          padding: inputPadding\n        }],\n        value: value,\n        onBlur: this._onBlur,\n        onFocus: this._onFocus,\n        onChange: this._onChange,\n        underlineColorAndroid: 'transparent',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          justifyContent: 'center',\n          top: 0,\n          height: inputHeight,\n          width: width,\n          left: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, inputWidth]\n          }),\n          backgroundColor: labelBackgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.label, labelStyle, {\n          marginHorizontal: inputPadding\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, label))));\n    }\n  }]);\n\n  return Kaede;\n}(BaseInput);\n\nKaede.propTypes = {\n  easing: PropTypes.func,\n  inputPadding: PropTypes.number,\n  height: PropTypes.number\n};\nKaede.defaultProps = {\n  easing: Easing.bezier(0.2, 1, 0.3, 1),\n  inputPadding: 16,\n  height: 60\n};\nexport { Kaede as default };\nvar styles = StyleSheet.create({\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#6a7989'\n  },\n  textInput: {\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/node_modules/react-native-textinput-effects/lib/Kaede.js"],"names":["React","PropTypes","BaseInput","Kaede","props","label","containerStyle","style","inputStyle","labelStyle","inputHeight","height","inputPadding","state","width","focusedAnim","value","inputWidth","flatLabelStyle","StyleSheet","flatten","labelBackgroundColor","backgroundColor","_onLayout","marginLeft","interpolate","inputRange","outputRange","input","styles","textInput","padding","_onBlur","_onFocus","_onChange","focus","position","justifyContent","top","left","marginHorizontal","propTypes","easing","func","number","defaultProps","Easing","bezier","create","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Easing,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Kaede extends BaseInput {\n  static propTypes = {\n    easing: PropTypes.func,\n    inputPadding: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    easing: Easing.bezier(0.2, 1, 0.3, 1),\n    inputPadding: 16,\n    height: 60,\n  };\n\n  render() {\n    const {\n      label,\n      style: containerStyle,\n      inputStyle,\n      labelStyle,\n      height: inputHeight,\n      inputPadding,\n    } = this.props;\n    const { width, focusedAnim, value } = this.state;\n    const inputWidth = width * 0.6;\n\n    const flatLabelStyle = StyleSheet.flatten(labelStyle);\n    let labelBackgroundColor = '#EBEAEA';\n    if (flatLabelStyle && flatLabelStyle.backgroundColor) {\n      labelBackgroundColor = flatLabelStyle.backgroundColor;\n    }\n\n    return (\n      <View style={containerStyle} onLayout={this._onLayout}>\n        <Animated.View\n          style={{\n            width: inputWidth,\n            marginLeft: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [inputWidth * -1, 0],\n            }),\n          }}\n        >\n          <TextInput\n            ref={this.input}\n            {...this.props}\n            style={[styles.textInput, inputStyle, {\n              height: inputHeight,\n              padding: inputPadding,\n            }]}\n            value={value}\n            onBlur={this._onBlur}\n            onFocus={this._onFocus}\n            onChange={this._onChange}\n            underlineColorAndroid={'transparent'}\n          />\n        </Animated.View>\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              position: 'absolute',\n              justifyContent: 'center',\n              top: 0,\n              height: inputHeight,\n              width,\n              left: focusedAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, inputWidth],\n              }),\n              backgroundColor: labelBackgroundColor,\n            }}\n          >\n            <Text style={[styles.label, labelStyle, {\n              marginHorizontal: inputPadding,\n            }]}>\n              {label}\n            </Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#6a7989',\n  },\n  textInput: {\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}