{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/node_modules/react-native-textinput-effects/lib/Fumi.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BaseInput from \"./BaseInput\";\n\nvar Fumi = function (_BaseInput) {\n  _inherits(Fumi, _BaseInput);\n\n  var _super = _createSuper(Fumi);\n\n  function Fumi() {\n    _classCallCheck(this, Fumi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Fumi, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          iconClass = _this$props.iconClass,\n          iconColor = _this$props.iconColor,\n          iconSize = _this$props.iconSize,\n          passiveIconColor = _this$props.passiveIconColor,\n          iconName = _this$props.iconName,\n          label = _this$props.label,\n          containerStyle = _this$props.style,\n          inputStyle = _this$props.inputStyle,\n          inputHeight = _this$props.height,\n          inputPadding = _this$props.inputPadding,\n          iconWidth = _this$props.iconWidth,\n          labelStyle = _this$props.labelStyle;\n      var _this$state = this.state,\n          focusedAnim = _this$state.focusedAnim,\n          value = _this$state.value;\n      var AnimatedIcon = Animated.createAnimatedComponent(iconClass);\n      var ANIM_PATH = inputPadding + inputHeight;\n      var NEGATIVE_ANIM_PATH = ANIM_PATH * -1;\n      return React.createElement(View, {\n        style: [styles.container, containerStyle, {\n          height: ANIM_PATH\n        }],\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, React.createElement(AnimatedIcon, {\n        name: iconName,\n        color: iconColor,\n        size: iconSize,\n        style: {\n          position: 'absolute',\n          left: inputPadding,\n          bottom: focusedAnim.interpolate({\n            inputRange: [0, 0.5, 0.51, 0.7, 1],\n            outputRange: [24, ANIM_PATH, NEGATIVE_ANIM_PATH, NEGATIVE_ANIM_PATH, 24]\n          }),\n          color: focusedAnim.interpolate({\n            inputRange: [0, 0.5, 1],\n            outputRange: [passiveIconColor, iconColor, iconColor]\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: [styles.separator, {\n          height: inputHeight,\n          left: iconWidth + 8\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          left: iconWidth + inputPadding,\n          height: inputHeight,\n          top: focusedAnim.interpolate({\n            inputRange: [0, 0.5, 0.51, 0.7, 1],\n            outputRange: [24, ANIM_PATH, NEGATIVE_ANIM_PATH, NEGATIVE_ANIM_PATH, inputPadding / 2]\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.Text, {\n        style: [styles.label, {\n          fontSize: focusedAnim.interpolate({\n            inputRange: [0, 0.7, 0.71, 1],\n            outputRange: [16, 16, 12, 12]\n          }),\n          color: focusedAnim.interpolate({\n            inputRange: [0, 0.7],\n            outputRange: ['#696969', '#a3a3a3']\n          })\n        }, labelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, label))), React.createElement(TextInput, _extends({\n        ref: this.input\n      }, this.props, {\n        style: [styles.textInput, {\n          marginLeft: iconWidth + inputPadding,\n          color: iconColor\n        }, inputStyle],\n        value: value,\n        onBlur: this._onBlur,\n        onFocus: this._onFocus,\n        onChange: this._onChange,\n        underlineColorAndroid: 'transparent',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return Fumi;\n}(BaseInput);\n\nFumi.propTypes = {\n  iconClass: PropTypes.func.isRequired,\n  iconName: PropTypes.string.isRequired,\n  iconColor: PropTypes.string,\n  iconSize: PropTypes.number,\n  passiveIconColor: PropTypes.string,\n  height: PropTypes.number\n};\nFumi.defaultProps = {\n  height: 48,\n  iconColor: '#00aeef',\n  iconSize: 20,\n  iconWidth: 40,\n  inputPadding: 16,\n  passiveIconColor: '#a3a3a3',\n  animationDuration: 300\n};\nexport { Fumi as default };\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    paddingTop: 16,\n    backgroundColor: 'white'\n  },\n  label: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  textInput: {\n    flex: 1,\n    color: 'black',\n    fontSize: 18,\n    padding: 7,\n    paddingLeft: 0\n  },\n  separator: {\n    position: 'absolute',\n    width: 1,\n    backgroundColor: '#f0f0f0',\n    top: 8\n  }\n});","map":{"version":3,"sources":["/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/node_modules/react-native-textinput-effects/lib/Fumi.js"],"names":["React","PropTypes","BaseInput","Fumi","props","iconClass","iconColor","iconSize","passiveIconColor","iconName","label","containerStyle","style","inputStyle","inputHeight","height","inputPadding","iconWidth","labelStyle","state","focusedAnim","value","AnimatedIcon","Animated","createAnimatedComponent","ANIM_PATH","NEGATIVE_ANIM_PATH","styles","container","_onLayout","focus","position","left","bottom","interpolate","inputRange","outputRange","color","separator","top","fontSize","input","textInput","marginLeft","_onBlur","_onFocus","_onChange","propTypes","func","isRequired","string","number","defaultProps","animationDuration","StyleSheet","create","overflow","paddingTop","backgroundColor","fontWeight","flex","padding","paddingLeft","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Fumi extends BaseInput {\n  static propTypes = {\n    /*\n     * This is the icon component you are importing from react-native-vector-icons.\n     * import FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\n     * iconClass={FontAwesomeIcon}\n     */\n    iconClass: PropTypes.func.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as name prop\n     */\n    iconName: PropTypes.string.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as color prop.\n     * Also used as textInput color.\n     */\n    iconColor: PropTypes.string,\n    /*\n     * Passed to react-native-vector-icons library as size prop.\n     */\n    iconSize: PropTypes.number,\n\n    passiveIconColor: PropTypes.string,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    height: 48,\n    iconColor: '#00aeef',\n    iconSize: 20,\n    iconWidth: 40,\n    inputPadding: 16,\n    passiveIconColor: '#a3a3a3',\n    animationDuration: 300,\n  };\n\n  render() {\n    const {\n      iconClass,\n      iconColor,\n      iconSize,\n      passiveIconColor,\n      iconName,\n      label,\n      style: containerStyle,\n      inputStyle,\n      height: inputHeight,\n      inputPadding,\n      iconWidth,\n      labelStyle,\n    } = this.props;\n    const { focusedAnim, value } = this.state;\n    const AnimatedIcon = Animated.createAnimatedComponent(iconClass);\n    const ANIM_PATH = inputPadding + inputHeight;\n    const NEGATIVE_ANIM_PATH = ANIM_PATH * -1;\n\n    return (\n      <View\n        style={[styles.container, containerStyle, {\n          height: ANIM_PATH,\n        }]}\n        onLayout={this._onLayout}\n      >\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <AnimatedIcon\n            name={iconName}\n            color={iconColor}\n            size={iconSize}\n            style={{\n              position: 'absolute',\n              left: inputPadding,\n              bottom: focusedAnim.interpolate({\n                inputRange: [0, 0.5, 0.51, 0.7, 1],\n                outputRange: [\n                  24,\n                  ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  24,\n                ],\n              }),\n              color: focusedAnim.interpolate({\n                inputRange: [0, 0.5, 1],\n                outputRange: [passiveIconColor, iconColor, iconColor],\n              }),\n            }}\n          />\n        </TouchableWithoutFeedback>\n        <View\n          style={[\n            styles.separator,\n            {\n              height: inputHeight,\n              left: iconWidth + 8,\n            },\n          ]}\n        />\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              position: 'absolute',\n              left: iconWidth + inputPadding,\n              height: inputHeight,\n              top: focusedAnim.interpolate({\n                inputRange: [0, 0.5, 0.51, 0.7, 1],\n                outputRange: [\n                  24,\n                  ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  inputPadding / 2,\n                ],\n              }),\n            }}\n          >\n            <Animated.Text\n              style={[\n                styles.label,\n                {\n                  fontSize: focusedAnim.interpolate({\n                    inputRange: [0, 0.7, 0.71, 1],\n                    outputRange: [16, 16, 12, 12],\n                  }),\n                  color: focusedAnim.interpolate({\n                    inputRange: [0, 0.7],\n                    outputRange: ['#696969', '#a3a3a3'],\n                  }),\n                },\n                labelStyle,\n              ]}\n            >\n              {label}\n            </Animated.Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[\n            styles.textInput,\n            {\n              marginLeft: iconWidth + inputPadding,\n              color: iconColor,\n            },\n            inputStyle,\n          ]}\n          value={value}\n          onBlur={this._onBlur}\n          onFocus={this._onFocus}\n          onChange={this._onChange}\n          underlineColorAndroid={'transparent'}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    paddingTop: 16,\n    backgroundColor: 'white',\n  },\n  label: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  textInput: {\n    flex: 1,\n    color: 'black',\n    fontSize: 18,\n    padding: 7,\n    paddingLeft: 0,\n  },\n  separator: {\n    position: 'absolute',\n    width: 1,\n    backgroundColor: '#f0f0f0',\n    top: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}