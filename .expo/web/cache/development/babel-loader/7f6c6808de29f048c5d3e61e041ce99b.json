{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/node_modules/react-native-textinput-effects/lib/Isao.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BaseInput from \"./BaseInput\";\n\nvar Isao = function (_BaseInput) {\n  _inherits(Isao, _BaseInput);\n\n  var _super = _createSuper(Isao);\n\n  function Isao() {\n    _classCallCheck(this, Isao);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Isao, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          containerStyle = _this$props.style,\n          inputHeight = _this$props.height,\n          borderHeight = _this$props.borderHeight,\n          inputPadding = _this$props.inputPadding,\n          labelHeight = _this$props.labelHeight,\n          inputStyle = _this$props.inputStyle,\n          labelStyle = _this$props.labelStyle,\n          activeColor = _this$props.activeColor,\n          passiveColor = _this$props.passiveColor;\n      var _this$state = this.state,\n          width = _this$state.width,\n          focusedAnim = _this$state.focusedAnim,\n          value = _this$state.value;\n      return React.createElement(View, {\n        style: [containerStyle, {\n          height: inputHeight + labelHeight\n        }],\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.inputContainer, {\n          height: inputHeight,\n          borderBottomColor: passiveColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, _extends({\n        ref: this.input\n      }, this.props, {\n        style: [styles.textInput, inputStyle, {\n          width: width,\n          height: inputHeight,\n          paddingHorizontal: inputPadding\n        }],\n        value: value,\n        onBlur: this._onBlur,\n        onChange: this._onChange,\n        onFocus: this._onFocus,\n        underlineColorAndroid: 'transparent',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          height: labelHeight,\n          width: width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.Text, {\n        style: [styles.label, labelStyle, {\n          width: width,\n          opacity: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [1, 0]\n          }),\n          bottom: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, labelHeight]\n          }),\n          color: passiveColor,\n          height: labelHeight,\n          left: inputPadding\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, label), React.createElement(Animated.Text, {\n        style: [styles.label, labelStyle, {\n          opacity: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, 1]\n          }),\n          bottom: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [labelHeight * -1, 0]\n          }),\n          color: activeColor,\n          height: labelHeight,\n          left: inputPadding\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, label))), React.createElement(Animated.View, {\n        style: [styles.border, {\n          height: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, borderHeight]\n          }),\n          width: width,\n          backgroundColor: activeColor,\n          bottom: labelHeight\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Isao;\n}(BaseInput);\n\nIsao.propTypes = {\n  passiveColor: PropTypes.string,\n  activeColor: PropTypes.string,\n  borderHeight: PropTypes.number,\n  labelHeight: PropTypes.number,\n  inputPadding: PropTypes.number,\n  height: PropTypes.number\n};\nIsao.defaultProps = {\n  activeColor: 'red',\n  passiveColor: 'white',\n  height: 48,\n  labelHeight: 24,\n  inputPadding: 16,\n  borderHeight: 8,\n  easing: Easing.bezier(0.2, 1, 0.3, 1)\n};\nexport { Isao as default };\nvar styles = StyleSheet.create({\n  inputContainer: {\n    borderBottomWidth: 2\n  },\n  label: {\n    position: 'absolute',\n    paddingTop: 4,\n    backgroundColor: 'transparent',\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  textInput: {\n    color: '#afb3b8',\n    fontSize: 18,\n    fontWeight: 'bold',\n    padding: 0\n  },\n  border: {\n    position: 'absolute',\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"sources":["/Users/skylarthomas/Desktop/Client Work/Ayzenberg /Dev/myCOLOR App/mycolor_v3/node_modules/react-native-textinput-effects/lib/Isao.js"],"names":["React","PropTypes","BaseInput","Isao","props","label","containerStyle","style","inputHeight","height","borderHeight","inputPadding","labelHeight","inputStyle","labelStyle","activeColor","passiveColor","state","width","focusedAnim","value","_onLayout","styles","inputContainer","borderBottomColor","input","textInput","paddingHorizontal","_onBlur","_onChange","_onFocus","focus","opacity","interpolate","inputRange","outputRange","bottom","color","left","border","backgroundColor","propTypes","string","number","defaultProps","easing","Easing","bezier","StyleSheet","create","borderBottomWidth","position","paddingTop","fontSize","fontWeight","padding","right"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Easing,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Isao extends BaseInput {\n  static propTypes = {\n    /*\n     * this is applied as passive border and label color\n     */\n    passiveColor: PropTypes.string,\n    /*\n     * this is applied as active border and label color\n     */\n    activeColor: PropTypes.string,\n    /*\n     * active border height\n     */\n    borderHeight: PropTypes.number,\n    labelHeight: PropTypes.number,\n    inputPadding: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    activeColor: 'red',\n    passiveColor: 'white',\n    height: 48,\n    labelHeight: 24,\n    inputPadding: 16,\n    borderHeight: 8,\n    easing: Easing.bezier(0.2, 1, 0.3, 1),\n  };\n\n  render() {\n    const {\n      label,\n      style: containerStyle,\n      height: inputHeight,\n      borderHeight,\n      inputPadding,\n      labelHeight,\n      inputStyle,\n      labelStyle,\n      activeColor,\n      passiveColor,\n    } = this.props;\n    const {\n      width,\n      focusedAnim,\n      value,\n    } = this.state;\n\n    return (\n      <View\n        style={[\n          containerStyle,\n          {\n            height: inputHeight + labelHeight,\n          },\n        ]}\n        onLayout={this._onLayout}\n      >\n        <View\n          style={[\n            styles.inputContainer,\n            {\n              height: inputHeight,\n              borderBottomColor: passiveColor,\n            },\n          ]}\n        >\n          <TextInput\n            ref={this.input}\n            {...this.props}\n            style={[\n              styles.textInput,\n              inputStyle,\n              {\n                width,\n                height: inputHeight,\n                paddingHorizontal: inputPadding,\n              },\n            ]}\n            value={value}\n            onBlur={this._onBlur}\n            onChange={this._onChange}\n            onFocus={this._onFocus}\n            underlineColorAndroid={'transparent'}\n          />\n        </View>\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <View\n            style={{\n              height: labelHeight,\n              width,\n            }}\n          >\n            {/* passive label */}\n            <Animated.Text\n              style={[\n                styles.label,\n                labelStyle,\n                {\n                  width,\n                  opacity: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [1, 0],\n                  }),\n                  bottom: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, labelHeight],\n                  }),\n                  color: passiveColor,\n                  height: labelHeight,\n                  left: inputPadding,\n                },\n              ]}\n            >\n              {label}\n            </Animated.Text>\n            {/* active label */}\n            <Animated.Text\n              style={[\n                styles.label,\n                labelStyle,\n                {\n                  opacity: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 1],\n                  }),\n                  bottom: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [labelHeight * -1, 0],\n                  }),\n                  color: activeColor,\n                  height: labelHeight,\n                  left: inputPadding,\n                },\n              ]}\n            >\n              {label}\n            </Animated.Text>\n          </View>\n        </TouchableWithoutFeedback>\n        <Animated.View\n          style={[\n            styles.border,\n            {\n              height: focusedAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, borderHeight],\n              }),\n              width,\n              backgroundColor: activeColor,\n              bottom: labelHeight,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    borderBottomWidth: 2,\n  },\n  label: {\n    position: 'absolute',\n    paddingTop: 4,\n    backgroundColor: 'transparent',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  textInput: {\n    color: '#afb3b8',\n    fontSize: 18,\n    fontWeight: 'bold',\n    padding: 0,\n  },\n  border: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}